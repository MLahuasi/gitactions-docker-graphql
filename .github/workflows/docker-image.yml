name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    # Tomar código desde nuestro repositorio. NOTA: fetch-depth va hasta el commit raiz
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    # Obtener versión publicación
    - name: Git Semantic Version
      uses: PaulHatch/semantic-version@v4.0.3  
      with:
        # Si viene la palabra "major:" en el commit 
        major_pattern: "major:"
        # Si viene la palabra "feat:" en el commit
        minor_pattern: "feat:"
        # Formato version
        format: "${major}.${minor}.${patch}-prerelease${increment}"
      id: version
    # Autentificarse usando los secretos almacenados en el reposutorio
    - name: Docker Login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        NEW_VERSION: ${{ steps.version.outputs.version }}
      run: | 
        echo "Iniciando Login"
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
        echo "New version: $NEW_VERSION"
        echo "Fin Login"
    # # Contruir Imagen
    # - name: Build Docker Image
    #   run: |
    #     echo "Iniciando Build"
    #     docker build -t jmlahuasiq/gitactions-docker:0.0.1 .
    #     docker build -t jmlahuasiq/gitactions-docker:latest .
    #     echo "Finalizando Build"
    # # Subir Imagen a DockerHub
    # - name: Push Docker Image
    #   run: |
    #     echo "Iniciando Push"
    #     docker push jmlahuasiq/gitactions-docker:0.0.1
    #     docker push jmlahuasiq/gitactions-docker:latest
    #     echo "Finalizando Push"


        
    # - name: Build the Docker image
    #   run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
